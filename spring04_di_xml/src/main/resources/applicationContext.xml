<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        spring中的依赖注入:
            IOC的作用: 降低程序间的依赖关系
            依赖注入就是依赖关系的维护,类中需要用到的其他类或属性都交给spring框架来维护,我们只需要在配置文件中说明即可


    -->
    <bean id="nowTime" class="java.util.Date"></bean>
    <!--
        使用构造方法注入
            在bean标签内部使用constructor-arg标签.
                type:数据类型
                index:构造方法中参数的索引,从0开始
                name:参数的属性名
                ======以上三个都是确定给构造方法中的哪个参数注入=========
                value:注入基本数据类型和String类型的数据
                ref:注入其他类型的数据.其他类型必须配置过bean对象
            优势:
                在获取bean对象时,注入数据是必须的操作,否则对象无法创建成功.
            弊端:
                改变了bean对象的实例化方法,即使创建对象时用不到这些值也必须提供.
    -->
    <bean id="accountService" class="com.spring.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="张三"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="nowTime"></constructor-arg>
    </bean>

    <!--
        使用setter方法注入
            在bean标签内部使用property标签
                name:setter方法的属性
                value:注入基本数据类型和String类型的数据
                ref:注入其他类型的数据.其他类型必须配置过bean对象
            优势:
                创建对象时没有明确的限制,可以直接使用默认构造函数
            弊端:
                如果对象的某个参数必须有值,创建对象可能没有注入
    -->
    <bean id="accountService2" class="com.spring.service.impl.AccountServiceImpl2">
        <property name="name" value="李四"/>
        <property name="age" value="20"/>
        <property name="birthday" ref="nowTime"/>
    </bean>

    <!--
        集合数据注入
            List结构集合注入使用的标签:array、list、set
                泛型为bean对象时,内部使用<ref>标签,而不是value
            Map接口集合入住使用的标签:map、props
                key/value泛型为bean对象时,entry标签使用key-ref/value-ref
            相同结构,标签可以互用
     -->
    <bean id="accountService3" class="com.spring.service.impl.AccountServiceImpl3">
        <!--注入数组数据-->
        <property name="strings">
            <array>
                <value>bb</value>
                <value>aa</value>
                <value>cc</value>
            </array>
        </property>
        <!--注入List数据-->
        <property name="list">
            <list>
                <value>1</value>
                <value>2</value>
            </list>
        </property>
        <!--注入Set数据-->
        <property name="set">
            <set>
                <value>0</value>
                <value>1</value>
                <!--重复数据会自动被去除-->
                <value>0</value>
            </set>
        </property>
        <!--注入Map数据-->
        <property name="map">
            <map>
                <entry key="testA" value="AAA"/>
                <entry key="testB">
                    <value>BBB</value>
                </entry>
            </map>
        </property>
        <!--注入Properties数据-->
        <property name="properties">
            <props>
                <prop key="testC">CCC</prop>
                <prop key="testD">DDD</prop>
            </props>
        </property>
        <!--注入泛型为bean对象的List数据-->
        <property name="dateList">
            <list>
                <ref bean="nowTime"/>
                <ref bean="nowTime"/>
            </list>
        </property>
        <!--注入value泛型为bean对象的Map数据,Properties类型没有泛型-->
        <property name="dateMap">
            <map>
                <entry key="testA" value-ref="nowTime"/>
                <entry key="testB" value-ref="nowTime"/>
            </map>
        </property>
    </bean>
</beans>